// Generated by CoffeeScript 1.6.2
/*
* A plugin to make a view container
*/


(function() {
  Backpack.ContainerPlugin = {
    /*
    * Setup containerNode and add child views on initialize
    */

    setup: function() {
      var _this = this;

      if (!this.containerNode) {
        this.containerNode = this.$el;
      }
      if (this.children) {
        _.each(this.children, function(child) {
          _this.addView(child);
        });
      } else {
        this.children = [];
      }
    },
    /*
    * Get child view at specified index
    * @param {Integer} index Child index
    * @return {Backbone.View}
    */

    getChild: function(index) {
      return this.children[index];
    },
    /*
    * Add view to container node
    * @param {Backbone.View} view A view to add
    */

    addView: function(view) {
      this.containerNode.append(view.$el);
    },
    /*
    * Add view as child
    * @param {Backbone.View} view A view to add
    */

    addChild: function(view) {
      this.addView(view);
      this.children.push(view);
    },
    /*
    * Remove child view at specified index
    * @param {Backbone.View|Integer} view A view to remove or child index
    */

    removeChild: function(view) {
      var index;

      if (_.isNumber(view)) {
        index = view;
      } else {
        index = _.indexOf(this.children, view);
      }
      if (index >= 0) {
        this.children[index].remove();
        this.children.splice(index, 1);
      }
    },
    /*
    * Clear all children
    */

    clearChildren: function() {
      var i, _i, _ref;

      for (i = _i = _ref = this.children.length - 1; _i >= 0; i = _i += -1) {
        this.removeChild(i);
      }
    },
    filterChildren: function(options) {
      _.filter(this.children, function(view) {
        if (view.model.filter(options)) {
          view.$el.show();
        } else {
          view.$el.hide();
        }
      });
    },
    /*
    * Clear children on destroy
    */

    cleanup: function() {
      this.clearChildren();
    }
  };

}).call(this);
