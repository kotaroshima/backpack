// Generated by CoffeeScript 1.6.2
(function() {
  module('Backpack.StackView', {
    teardown: function() {
      if (this.stackView) {
        this.stackView.destroy();
      }
    }
  });

  test('initialize by passing children', function() {
    var view1, view2;

    view1 = new Backpack.View({
      initialize: function(options) {
        this.$el.html('<div>View1</div>');
      }
    });
    view2 = new Backpack.View({
      initialize: function(options) {
        this.$el.html('<div>View2</div>');
      }
    });
    this.stackView = new Backpack.StackView({
      children: [view1, view2],
      selectedIndex: 0
    });
    $('#testNode').append(this.stackView.$el);
    equal(view1.$el.is(':hidden'), false);
    equal(view2.$el.is(':hidden'), true);
  });

  test('no selectedIndex', function() {
    var view1, view2;

    view1 = new Backpack.View({
      initialize: function(options) {
        this.$el.html('<div>View1</div>');
      }
    });
    view2 = new Backpack.View({
      initialize: function(options) {
        this.$el.html('<div>View2</div>');
      }
    });
    this.stackView = new Backpack.StackView({
      children: [view1, view2]
    });
    $('#testNode').append(this.stackView.$el);
    equal(view1.$el.is(':hidden'), false);
    equal(view2.$el.is(':hidden'), true);
  });

  test('display view specified by selectedIndex', function() {
    var view1, view2;

    view1 = new Backpack.View({
      initialize: function(options) {
        this.$el.html('<div>View1</div>');
      }
    });
    view2 = new Backpack.View({
      initialize: function(options) {
        this.$el.html('<div>View2</div>');
      }
    });
    this.stackView = new Backpack.StackView({
      children: [view1, view2],
      selectedIndex: 1
    });
    $('#testNode').append(this.stackView.$el);
    equal(view1.$el.is(':hidden'), true);
    equal(view2.$el.is(':hidden'), false);
  });

  test('select views', function() {
    var view1, view2;

    view1 = new Backpack.View({
      name: 'view1',
      initialize: function(options) {
        this.$el.html('<div>View1</div>');
      },
      showNext: function() {}
    });
    view2 = new Backpack.View({
      name: 'view2',
      initialize: function(options) {
        this.$el.html('<div>View2</div>');
      },
      showPrevious: function() {}
    });
    this.stackView = new Backpack.StackView({
      children: [view1, view2],
      selectedIndex: 0,
      stackEvents: {
        view1: {
          event: 'showNext',
          target: 'view2'
        },
        view2: {
          event: 'showPrevious',
          target: 'view1'
        }
      }
    });
    $('#testNode').append(this.stackView.$el);
    view1.showNext();
    equal(view1.$el.is(':hidden'), true);
    equal(view2.$el.is(':hidden'), false);
    view2.showPrevious();
    equal(view1.$el.is(':hidden'), false);
    equal(view2.$el.is(':hidden'), true);
  });

}).call(this);
