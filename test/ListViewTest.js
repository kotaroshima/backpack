// Generated by CoffeeScript 1.6.2
(function() {
  Backbone.sync = function() {};

  module('Backpack.ListView', {
    setup: function() {
      this.ItemView = Backpack.View.extend({
        template: _.template('<div class="itemNode" style="border:1px solid red"><%- name %></div>'),
        initialize: function(options) {
          this.listenTo(this.model, 'change', this.render);
        },
        render: function() {
          this.$el.html(this.template(this.model.attributes));
          return this;
        }
      });
    },
    teardown: function() {
      if (this.listView) {
        this.listView.destroy();
      }
    }
  });

  test('initialize with models', 7, function() {
    var collection, data, itemNodes, models;

    data = ['Orange', 'Apple', 'Grape'];
    models = _.map(data, function(item) {
      return {
        name: item
      };
    });
    collection = new Backbone.Collection(models);
    this.listView = new Backpack.ListView({
      collection: collection,
      itemClass: this.ItemView
    });
    $('#testNode').append(this.listView.$el);
    itemNodes = $('#testNode .itemNode');
    equal(itemNodes.size(), data.length);
    itemNodes.each(function(index, node) {
      equal($(this).is(':visible'), true);
      equal($(this).text(), data[index]);
    });
  });

  test('add models after initialize', 7, function() {
    var collection, data, itemNodes;

    data = ['Orange', 'Apple', 'Grape'];
    collection = new Backbone.Collection;
    this.listView = new Backpack.ListView({
      collection: collection,
      itemClass: this.ItemView
    });
    $('#testNode').append(this.listView.$el);
    _.each(data, function(item) {
      var model;

      model = new Backpack.Model({
        name: item
      });
      collection.add(model);
      model.save();
    });
    itemNodes = $('#testNode .itemNode');
    equal(itemNodes.size(), data.length);
    itemNodes.each(function(index, node) {
      equal($(this).is(':visible'), true);
      equal($(this).text(), data[index]);
    });
  });

  test('remove model', 5, function() {
    var collection, data, itemNodes, models;

    data = ['Orange', 'Apple', 'Grape'];
    collection = new Backbone.Collection;
    this.listView = new Backpack.ListView({
      collection: collection,
      itemClass: this.ItemView
    });
    $('#testNode').append(this.listView.$el);
    models = _.map(data, function(item) {
      var model;

      model = new Backpack.Model({
        name: item
      });
      model.save();
      return model;
    });
    _.each(models, function(model) {
      collection.add(model);
    });
    data.splice(1, 1);
    models[1].destroy();
    itemNodes = $('#testNode .itemNode');
    equal(itemNodes.size(), data.length);
    itemNodes.each(function(index, node) {
      equal($(this).is(':visible'), true);
      equal($(this).text(), data[index]);
    });
  });

  test('modify model', 7, function() {
    var collection, data, itemNodes, models;

    data = ['Orange', 'Apple', 'Grape'];
    collection = new Backbone.Collection;
    this.listView = new Backpack.ListView({
      collection: collection,
      itemClass: this.ItemView
    });
    $('#testNode').append(this.listView.$el);
    models = _.map(data, function(item) {
      var model;

      model = new Backpack.Model({
        name: item
      });
      model.save();
      return model;
    });
    _.each(models, function(model) {
      collection.add(model);
    });
    data[1] = 'Peach';
    models[1].set('name', data[1]);
    itemNodes = $('#testNode .itemNode');
    equal(itemNodes.size(), data.length);
    itemNodes.each(function(index, node) {
      equal($(this).is(':visible'), true);
      equal($(this).text(), data[index]);
    });
  });

}).call(this);
