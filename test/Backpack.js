// Generated by CoffeeScript 1.4.0
(function() {

  module('Backpack.attach');

  test('attach and detach', function() {
    var handler, obj;
    obj = {
      counter: 0,
      event: function() {}
    };
    handler = Backpack.attach(obj, 'event', function() {
      obj.counter++;
    });
    obj.event();
    equal(obj.counter, 1, 'counter should be incremented.');
    obj.event();
    obj.event();
    obj.event();
    obj.event();
    equal(obj.counter, 5, 'counter should be incremented five times.');
    handler.detach();
    obj.event();
    equal(obj.counter, 5, 'counter should not be incremented.');
    obj.event();
    obj.event();
    obj.event();
    equal(obj.counter, 5, 'counter should not be incremented.');
  });

  test('attach with arguments', function() {
    var obj;
    obj = {
      counter: 0,
      event: function(arg1, arg2) {}
    };
    Backpack.attach(obj, 'event', function(arg1, arg2) {
      equal(arg1, 'x', 'first argument should be passed in callback function');
      equal(arg2, 2, 'second argument should be passed in callback function');
    });
    obj.event('x', 2);
  });

  test('attach multiple events', function() {
    var handler1, handler2, obj;
    obj = {
      counter1: 0,
      counter2: 0,
      event: function() {}
    };
    handler1 = Backpack.attach(obj, 'event', function() {
      obj.counter1++;
    });
    handler2 = Backpack.attach(obj, 'event', function() {
      obj.counter2++;
    });
    obj.event();
    equal(obj.counter1, 1, 'counter1 should be incremented.');
    equal(obj.counter2, 1, 'counter2 should be incremented.');
    obj.event();
    obj.event();
    obj.event();
    obj.event();
    equal(obj.counter1, 5, 'counter1 should be incremented five times.');
    equal(obj.counter2, 5, 'counter2 should be incremented five times.');
    handler2.detach();
    obj.event();
    equal(obj.counter1, 6, 'counter1 should be incremented six times.');
    equal(obj.counter2, 5, 'counter2 should be incremented five times.');
    handler1.detach();
    obj.event();
    equal(obj.counter1, 6, 'counter1 should be incremented six times.');
    equal(obj.counter2, 5, 'counter2 should be incremented five times.');
  });

}).call(this);
