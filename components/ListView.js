// Generated by CoffeeScript 1.4.0
(function() {

  Backpack.ListView = Backpack.View.extend({
    plugins: [Backpack.Container],
    template: '<div class="noItemsNode">No Items</div><div class="containerNode"></div>',
    itemClass: Backpack.View,
    initialize: function(options) {
      if (options.itemClass) {
        this.itemClass = options.itemClass;
      }
      this.$el.html(this.template);
      this.containerNode = this.$('.containerNode');
      this.noItemsNode = this.$('.noItemsNode');
      Backpack.View.prototype.initialize.apply(this, arguments);
      this.collection.on("add remove reset", this.render, this);
      this.render();
    },
    render: function() {
      var len, models,
        _this = this;
      models = this.collection.models;
      len = models.length;
      this._showContainerNode(len > 0);
      this.clearChildren();
      if (len > 0) {
        _.each(models, function(model) {
          var child;
          child = _this.createChild(model);
          _this.addChild(child);
        });
      }
      return this;
    },
    _showContainerNode: function(bShow) {
      if (bShow) {
        this.noItemsNode.hide();
        this.containerNode.show();
      } else {
        this.noItemsNode.show();
        this.containerNode.hide();
      }
    },
    createChild: function(model) {
      var view;
      view = new this.itemClass({
        model: model
      });
      return view.render();
    },
    remove: function() {
      this.collection.off("add remove reset", this.render);
      Backpack.View.prototype.remove.call(this);
    }
  });

}).call(this);
